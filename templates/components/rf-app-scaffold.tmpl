{% define "content" %}
<link rel="import" href="/dist/polymer/polymer.html">
<link rel="import" href="/dist/paper-drawer-panel/paper-drawer-panel.html">
<link rel="import" href="/dist/paper-header-panel/paper-header-panel.html">
<link rel="import" href="/dist/paper-icon-button/paper-icon-button.html">
<link rel="import" href="/dist/paper-toolbar/paper-toolbar.html">

<dom-module id="rf-app-scaffold">
    <template>
		<style>
paper-toolbar {
    font-size: 24px;
	transition: var(--background-transition);
}

.card {
    @apply(--card-style);
}

.content {
    padding: 8px 16px 16px;
    min-height: 5em;
    margin: 10px 120px 60px 5px;
    background-color: #f8f8f8 !important;
}

.narrow.content {
    padding-top: 16px;
    margin: 0px 0px 60px 0px;
}

[drawer] .menu-container {
    padding: 8px 0;

    @apply(--layout-vertical);
}

[drawer] .menu-container > ::content paper-icon-button.item {
	padding: 8px;
}

[drawer] .menu-container > ::content .item {
    position: relative;
    padding: 16px;
    border-radius: 3px;
}

[drawer] .menu-container > ::content hr {
    background-color: var(--text-primary-color);
    border-style: ridge;
    width: 90%;
    margin: 2px 16px;
}
paper-header-panel[main] .main-title-container {
    font-size: 24px;
}

		</style>
        <paper-drawer-panel id="drawer" on-paper-responsive-change="onResponsiveChange" class$="[[_computeDrawerClass(narrow)]]" responsive-width="768px">
            <paper-header-panel drawer mode="[[_computeDrawerPanelMode(narrow)]]">
                <paper-toolbar>
                    <content select=".drawer-title"></content>
                </paper-toolbar>
                <div class="menu-container">
                    <content select=".drawer-menu"></content>
                </div>
            </paper-header-panel>
            <paper-header-panel id="main-panel" main mode="[[_computeMainPanelMode(narrow)]]" on-tap="onPanelTap">
                <paper-toolbar>
                    <div class="main-narrow-title-container flex">
                        <template is="dom-if" if="[[ narrow ]]" restamp>
                            <content select=".main-title"></content>
                        </template>
                    </div>
                </paper-toolbar>
                <div class$="[[_computeContentClass(narrow)]]">
                    <div class="main-title-container">
                        <template is="dom-if" if="[[ !narrow ]]" restamp>
                            <content select=".main-title"></content>
                        </template>
                    </div>
                    <content select=".main-content"></content>
                </div>
            </paper-header-panel>
        </paper-drawer-panel>
    </template>
    <script>
        "use strict";
        Polymer({
            is: "rf-app-scaffold",
            properties: {
                narrow: {
                    type: Boolean,
                    readOnly: true,
                    notify: true,
                    reflectToAttribute: true,
                }
            },
            _titleInstances: [],

            get mainScroller() {
                return this.$['main-panel'].scroller;
            },

            ready: function() {
            },

            onResponsiveChange: function(event, detail) {
                this._setNarrow(detail.narrow);
            },

            onPanelTap: function(event) {
                var path = Polymer.dom(event).path;
                for (var i = 0, e; e = path[i]; ++i) {
                    if (e.hasAttribute && e.hasAttribute('paper-drawer-toggle')) {
                        this.$.drawer.togglePanel();
                        break;
                    }
                }
            },

            _computeDrawerClass: function(narrow) {
                return narrow ? 'narrow' : '';
            },

            _computeContentClass: function(narrow) {
                return narrow ? 'content narrow' : 'content card';
            },

            _computeDrawerPanelMode: function(narrow) {
                return narrow ? 'standard' : 'seamed';
            },

            _computeMainPanelMode: function(narrow) {
                return narrow ? 'standard' : 'cover';
            },

        })
    </script>
</dom-module>
{% end %}
