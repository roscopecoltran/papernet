{% define "content" %}
<link rel="import" href="/dist/polymer/polymer.html">

<dom-module id="rf-share-service">
    <template>
        <a href="[[ url ]]" target="_blank" id="link">[[ description ]]</a>
    </template>
    <script>
(function(scope) {
    "use strict";

    var RfShareServices = scope.RfShareServices;
    if (!RfShareServices) {
        (function() {
            var services = {}, categories = {}, comparator = function(a, b) {
                return a.description.localeCompare(b.description);
            };

            RfShareServices = scope.RfShareServices = {};

            RfShareServices.get = function(name) {
                return services[name];
            };

            RfShareServices.getAll = function() {
                var ret = [];
                for (var key in services) {
                    ret.push(services[key]);
                }
                return ret.sort(comparator);
            };

            RfShareServices.getCategories = function() {
                return Object.keys(categories).sort();
            };

            RfShareServices.getAllByCategory = function(category) {
                return (categories[category] || []).sort(comparator);
            };

            RfShareServices.getActive = function(category) {
                var services = arguments.length ?
                    (categories[category] || []) :
                    this.getAll();

                return services.filter(function(s) {
                    return s.active;
                }).sort(comparator);
            };

            RfShareServices.register = function(service) {
                services[service.name] = service;
                if (service.category in categories) {
                    categories[service.category].push(service);
                } else {
                    categories[service.category] = [service];
                }
            };

            RfShareServices._unregister = function(name, category) {
                var service = services[name];
                if (service) {
                    delete services[name];

                    var category = categories[category || service.category];
                    if (category) {
                        category.splice(category.indexOf(service), 1);
                    }
                }
            };

        })();
    }

    Polymer({
        is: 'rf-share-service',
        properties: {
            name: {
                type: String,
                observer: '_nameChanged',
            },
            category: {
                type: String,
                observer: '_categoryChanged',
            },
            description: String,
            url: String,
            link: String,
            active: {
                type: Boolean,
                value: false,
            },
            article: {
                type: Object,
                observer: '_articleChanged',
            },
            urlComposer: {
                type: Function,
                observer: '_urlComposerChanged',
            },
        },

        attached: function() {
            RfShareServices.register(this);
        },

        go: function() {
            this.$.link.click();
        },

        _nameChanged: function(name, old) {
            if (name && this.category) {
                RfShareServices._unregister(old);
                RfShareServices.register(this);
            }
        },

        _categoryChanged: function(category, old) {
            if (this.name && category) {
                RfShareServices._unregister(this.name, old);
                RfShareServices.register(this);
            }
        },

        _articleChanged: function(article) {
            if (this.urlComposer && article) {
                this.url = this.urlComposer.call(this, article);
            }
        },

        _urlComposerChanged: function(composer) {
            if (composer && this.article) {
                this.url = composer.call(this, this.article);
            }
        },
    })
})(window);
    </script>
</dom-module>
{% end %}
