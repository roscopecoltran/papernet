FROM mhart/alpine-node:6
MAINTAINER Rosco Pecoltran <rosco.pecoltran@msn.com>

ARG GOSU_VERSION=${GOSU_VERSION:-1.10}

# some deps examples for specific nodejs packages:
#  - dynomite:  build-base git autoconf automake libtool gettext openssl-dev
#  - phantomjs: nodejs nodejs-npm xpdf vips vips-dev python2 git make fftw-dev g++ curl
#  - libsass-dev 
#  build-base perl python giflib-dev

# build-base perl python => node-sass
# ARG ALPINE_PKG_BUILD="make nasm gcc g++ musl-dev build-base perl python libtool automake autoconf git jpeg-dev libpng-dev giflib-dev musl libx11"
ARG ALPINE_PKG_BUILD="git curl make gcc g++ python linux-headers paxctl libgcc libstdc++"
ARG ALPINE_PKG_RUNTIME="ca-certificates openssl jpeg libpng giflib"
ARG ALPINE_PKG_INTERACTIVE="bash nano tree"
ARG ALPINE_PKG_DEL_STACKS="INTERACTIVE BUILD"

# dev/dist
ARG APP_CONTAINER_MODE="dist"  

# Install Gosu to /usr/local/bin/gosu
ADD https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64 /usr/local/sbin/gosu

# Install runtime dependencies & create runtime user
RUN chmod +x /usr/local/sbin/gosu \
    && adduser -D app -h /data -s /bin/sh

WORKDIR /src

# Copy source code to the container & build it
COPY . .

# fetch and build dependencies
RUN ./docker/build.sh

# NSSwitch configuration file
COPY docker/nsswitch.conf /etc/nsswitch.conf

# Container configuration
VOLUME ["/data"]
EXPOSE 8080
CMD ["/usr/local/sbin/gosu", "app", "./docker-entrypoint.sh"]

# available entrypoints
# CMD ["./docker-entrypoint.sh", "dev"]        	# dev mode 
# CMD ["./docker-entrypoint.sh", "build"]      	# build distribution version
# CMD ["./docker-entrypoint.sh", "test"]       	# unit-tests
# CMD ["./docker-entrypoint.sh", "mocha"]      	# mocha
# CMD ["./docker-entrypoint.sh", "mocha-watch"]	# mocha
